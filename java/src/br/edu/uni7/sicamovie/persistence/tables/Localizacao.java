/*
 * This file is generated by jOOQ.
 */
package br.edu.uni7.sicamovie.persistence.tables;


import br.edu.uni7.sicamovie.persistence.BdSicaMovie;
import br.edu.uni7.sicamovie.persistence.Indexes;
import br.edu.uni7.sicamovie.persistence.Keys;
import br.edu.uni7.sicamovie.persistence.tables.records.LocalizacaoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Localizacao extends TableImpl<LocalizacaoRecord> {

    private static final long serialVersionUID = 1269531518;

    /**
     * The reference instance of <code>bd_sica_movie.localizacao</code>
     */
    public static final Localizacao LOCALIZACAO = new Localizacao();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LocalizacaoRecord> getRecordType() {
        return LocalizacaoRecord.class;
    }

    /**
     * The column <code>bd_sica_movie.localizacao.id</code>.
     */
    public final TableField<LocalizacaoRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>bd_sica_movie.localizacao.descricao</code>.
     */
    public final TableField<LocalizacaoRecord, String> DESCRICAO = createField(DSL.name("descricao"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>bd_sica_movie.localizacao</code> table reference
     */
    public Localizacao() {
        this(DSL.name("localizacao"), null);
    }

    /**
     * Create an aliased <code>bd_sica_movie.localizacao</code> table reference
     */
    public Localizacao(String alias) {
        this(DSL.name(alias), LOCALIZACAO);
    }

    /**
     * Create an aliased <code>bd_sica_movie.localizacao</code> table reference
     */
    public Localizacao(Name alias) {
        this(alias, LOCALIZACAO);
    }

    private Localizacao(Name alias, Table<LocalizacaoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Localizacao(Name alias, Table<LocalizacaoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Localizacao(Table<O> child, ForeignKey<O, LocalizacaoRecord> key) {
        super(child, key, LOCALIZACAO);
    }

    @Override
    public Schema getSchema() {
        return BdSicaMovie.BD_SICA_MOVIE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOCALIZACAO_PRIMARY);
    }

    @Override
    public Identity<LocalizacaoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LOCALIZACAO;
    }

    @Override
    public UniqueKey<LocalizacaoRecord> getPrimaryKey() {
        return Keys.KEY_LOCALIZACAO_PRIMARY;
    }

    @Override
    public List<UniqueKey<LocalizacaoRecord>> getKeys() {
        return Arrays.<UniqueKey<LocalizacaoRecord>>asList(Keys.KEY_LOCALIZACAO_PRIMARY);
    }

    @Override
    public Localizacao as(String alias) {
        return new Localizacao(DSL.name(alias), this);
    }

    @Override
    public Localizacao as(Name alias) {
        return new Localizacao(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Localizacao rename(String name) {
        return new Localizacao(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Localizacao rename(Name name) {
        return new Localizacao(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
