/*
 * This file is generated by jOOQ.
 */
package br.edu.uni7.sicamovie.persistence.tables;


import br.edu.uni7.sicamovie.persistence.BdSicaMovie;
import br.edu.uni7.sicamovie.persistence.Indexes;
import br.edu.uni7.sicamovie.persistence.Keys;
import br.edu.uni7.sicamovie.persistence.tables.records.IngressoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ingresso extends TableImpl<IngressoRecord> {

    private static final long serialVersionUID = -124690487;

    /**
     * The reference instance of <code>bd_sica_movie.ingresso</code>
     */
    public static final Ingresso INGRESSO = new Ingresso();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IngressoRecord> getRecordType() {
        return IngressoRecord.class;
    }

    /**
     * The column <code>bd_sica_movie.ingresso.id</code>.
     */
    public final TableField<IngressoRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>bd_sica_movie.ingresso.sessao_id</code>.
     */
    public final TableField<IngressoRecord, Integer> SESSAO_ID = createField(DSL.name("sessao_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bd_sica_movie.ingresso.tipo_ingresso</code>.
     */
    public final TableField<IngressoRecord, Integer> TIPO_INGRESSO = createField(DSL.name("tipo_ingresso"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bd_sica_movie.ingresso</code> table reference
     */
    public Ingresso() {
        this(DSL.name("ingresso"), null);
    }

    /**
     * Create an aliased <code>bd_sica_movie.ingresso</code> table reference
     */
    public Ingresso(String alias) {
        this(DSL.name(alias), INGRESSO);
    }

    /**
     * Create an aliased <code>bd_sica_movie.ingresso</code> table reference
     */
    public Ingresso(Name alias) {
        this(alias, INGRESSO);
    }

    private Ingresso(Name alias, Table<IngressoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ingresso(Name alias, Table<IngressoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Ingresso(Table<O> child, ForeignKey<O, IngressoRecord> key) {
        super(child, key, INGRESSO);
    }

    @Override
    public Schema getSchema() {
        return BdSicaMovie.BD_SICA_MOVIE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INGRESSO_FK_INGRESSO_SESSAO_ID, Indexes.INGRESSO_FK_INGRESSO_TIPOINGRESSO_ID, Indexes.INGRESSO_PRIMARY);
    }

    @Override
    public Identity<IngressoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INGRESSO;
    }

    @Override
    public UniqueKey<IngressoRecord> getPrimaryKey() {
        return Keys.KEY_INGRESSO_PRIMARY;
    }

    @Override
    public List<UniqueKey<IngressoRecord>> getKeys() {
        return Arrays.<UniqueKey<IngressoRecord>>asList(Keys.KEY_INGRESSO_PRIMARY);
    }

    @Override
    public List<ForeignKey<IngressoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IngressoRecord, ?>>asList(Keys.FK_INGRESSO_SESSAO_ID, Keys.FK_INGRESSO_TIPOINGRESSO_ID);
    }

    public Sessao sessao() {
        return new Sessao(this, Keys.FK_INGRESSO_SESSAO_ID);
    }

    public TipoIngresso tipoIngresso() {
        return new TipoIngresso(this, Keys.FK_INGRESSO_TIPOINGRESSO_ID);
    }

    @Override
    public Ingresso as(String alias) {
        return new Ingresso(DSL.name(alias), this);
    }

    @Override
    public Ingresso as(Name alias) {
        return new Ingresso(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ingresso rename(String name) {
        return new Ingresso(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ingresso rename(Name name) {
        return new Ingresso(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
