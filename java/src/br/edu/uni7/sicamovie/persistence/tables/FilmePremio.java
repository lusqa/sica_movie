/*
 * This file is generated by jOOQ.
 */
package br.edu.uni7.sicamovie.persistence.tables;


import br.edu.uni7.sicamovie.persistence.BdSicaMovie;
import br.edu.uni7.sicamovie.persistence.Indexes;
import br.edu.uni7.sicamovie.persistence.Keys;
import br.edu.uni7.sicamovie.persistence.tables.records.FilmePremioRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmePremio extends TableImpl<FilmePremioRecord> {

    private static final long serialVersionUID = -1997558730;

    /**
     * The reference instance of <code>bd_sica_movie.filme_premio</code>
     */
    public static final FilmePremio FILME_PREMIO = new FilmePremio();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FilmePremioRecord> getRecordType() {
        return FilmePremioRecord.class;
    }

    /**
     * The column <code>bd_sica_movie.filme_premio.filme_id</code>.
     */
    public final TableField<FilmePremioRecord, Integer> FILME_ID = createField(DSL.name("filme_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bd_sica_movie.filme_premio.premio_id</code>.
     */
    public final TableField<FilmePremioRecord, Integer> PREMIO_ID = createField(DSL.name("premio_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bd_sica_movie.filme_premio</code> table reference
     */
    public FilmePremio() {
        this(DSL.name("filme_premio"), null);
    }

    /**
     * Create an aliased <code>bd_sica_movie.filme_premio</code> table reference
     */
    public FilmePremio(String alias) {
        this(DSL.name(alias), FILME_PREMIO);
    }

    /**
     * Create an aliased <code>bd_sica_movie.filme_premio</code> table reference
     */
    public FilmePremio(Name alias) {
        this(alias, FILME_PREMIO);
    }

    private FilmePremio(Name alias, Table<FilmePremioRecord> aliased) {
        this(alias, aliased, null);
    }

    private FilmePremio(Name alias, Table<FilmePremioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FilmePremio(Table<O> child, ForeignKey<O, FilmePremioRecord> key) {
        super(child, key, FILME_PREMIO);
    }

    @Override
    public Schema getSchema() {
        return BdSicaMovie.BD_SICA_MOVIE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FILME_PREMIO_FK_FILMEPREMIO_PREMIO_ID, Indexes.FILME_PREMIO_PRIMARY);
    }

    @Override
    public UniqueKey<FilmePremioRecord> getPrimaryKey() {
        return Keys.KEY_FILME_PREMIO_PRIMARY;
    }

    @Override
    public List<UniqueKey<FilmePremioRecord>> getKeys() {
        return Arrays.<UniqueKey<FilmePremioRecord>>asList(Keys.KEY_FILME_PREMIO_PRIMARY);
    }

    @Override
    public List<ForeignKey<FilmePremioRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FilmePremioRecord, ?>>asList(Keys.FK_FILMEPREMIO_FILME_ID, Keys.FK_FILMEPREMIO_PREMIO_ID);
    }

    public Filme filme() {
        return new Filme(this, Keys.FK_FILMEPREMIO_FILME_ID);
    }

    public Premio premio() {
        return new Premio(this, Keys.FK_FILMEPREMIO_PREMIO_ID);
    }

    @Override
    public FilmePremio as(String alias) {
        return new FilmePremio(DSL.name(alias), this);
    }

    @Override
    public FilmePremio as(Name alias) {
        return new FilmePremio(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FilmePremio rename(String name) {
        return new FilmePremio(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FilmePremio rename(Name name) {
        return new FilmePremio(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
