/*
 * This file is generated by jOOQ.
 */
package br.edu.uni7.sicamovie.persistence.tables;


import br.edu.uni7.sicamovie.persistence.BdSicaMovie;
import br.edu.uni7.sicamovie.persistence.Indexes;
import br.edu.uni7.sicamovie.persistence.Keys;
import br.edu.uni7.sicamovie.persistence.tables.records.SessaoRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sessao extends TableImpl<SessaoRecord> {

    private static final long serialVersionUID = -1892549570;

    /**
     * The reference instance of <code>bd_sica_movie.sessao</code>
     */
    public static final Sessao SESSAO = new Sessao();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessaoRecord> getRecordType() {
        return SessaoRecord.class;
    }

    /**
     * The column <code>bd_sica_movie.sessao.id</code>.
     */
    public final TableField<SessaoRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>bd_sica_movie.sessao.dia</code>.
     */
    public final TableField<SessaoRecord, Date> DIA = createField(DSL.name("dia"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>bd_sica_movie.sessao.filme_id</code>.
     */
    public final TableField<SessaoRecord, Integer> FILME_ID = createField(DSL.name("filme_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bd_sica_movie.sessao.sala_id</code>.
     */
    public final TableField<SessaoRecord, Integer> SALA_ID = createField(DSL.name("sala_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bd_sica_movie.sessao.horario_id</code>.
     */
    public final TableField<SessaoRecord, Integer> HORARIO_ID = createField(DSL.name("horario_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bd_sica_movie.sessao</code> table reference
     */
    public Sessao() {
        this(DSL.name("sessao"), null);
    }

    /**
     * Create an aliased <code>bd_sica_movie.sessao</code> table reference
     */
    public Sessao(String alias) {
        this(DSL.name(alias), SESSAO);
    }

    /**
     * Create an aliased <code>bd_sica_movie.sessao</code> table reference
     */
    public Sessao(Name alias) {
        this(alias, SESSAO);
    }

    private Sessao(Name alias, Table<SessaoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sessao(Name alias, Table<SessaoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Sessao(Table<O> child, ForeignKey<O, SessaoRecord> key) {
        super(child, key, SESSAO);
    }

    @Override
    public Schema getSchema() {
        return BdSicaMovie.BD_SICA_MOVIE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SESSAO_FK_SESSAO_FILME_ID, Indexes.SESSAO_FK_SESSAO_HORARIO_ID, Indexes.SESSAO_FK_SESSAO_SALA_ID, Indexes.SESSAO_PRIMARY);
    }

    @Override
    public Identity<SessaoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SESSAO;
    }

    @Override
    public UniqueKey<SessaoRecord> getPrimaryKey() {
        return Keys.KEY_SESSAO_PRIMARY;
    }

    @Override
    public List<UniqueKey<SessaoRecord>> getKeys() {
        return Arrays.<UniqueKey<SessaoRecord>>asList(Keys.KEY_SESSAO_PRIMARY);
    }

    @Override
    public List<ForeignKey<SessaoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SessaoRecord, ?>>asList(Keys.FK_SESSAO_FILME_ID, Keys.FK_SESSAO_SALA_ID, Keys.FK_SESSAO_HORARIO_ID);
    }

    public Filme filme() {
        return new Filme(this, Keys.FK_SESSAO_FILME_ID);
    }

    public Sala sala() {
        return new Sala(this, Keys.FK_SESSAO_SALA_ID);
    }

    public Horario horario() {
        return new Horario(this, Keys.FK_SESSAO_HORARIO_ID);
    }

    @Override
    public Sessao as(String alias) {
        return new Sessao(DSL.name(alias), this);
    }

    @Override
    public Sessao as(Name alias) {
        return new Sessao(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessao rename(String name) {
        return new Sessao(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Sessao rename(Name name) {
        return new Sessao(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Date, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
